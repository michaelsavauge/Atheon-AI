apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  serviceName: "postgres"
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15
        ports:
        - containerPort: 5432
          name: postgres
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "1000m"
            memory: "2Gi"
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: atheon-secrets
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: atheon-secrets
              key: postgres-password
        - name: POSTGRES_DB
          value: "atheon"
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 5
          periodSeconds: 5
      initContainers:
      - name: init-schema
        image: postgres:15
        command: ['sh', '-c', 'sleep 10 && PGPASSWORD=$POSTGRES_PASSWORD psql -h postgres -U $POSTGRES_USER -d $POSTGRES_DB -f /schema/schema.sql']
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: atheon-secrets
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: atheon-secrets
              key: postgres-password
        - name: POSTGRES_DB
          value: "atheon"
        volumeMounts:
        - name: schema-volume
          mountPath: /schema
      volumes:
      - name: schema-volume
        configMap:
          name: postgres-schema
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
      storageClassName: standard
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  ports:
  - port: 5432
    name: postgres
    targetPort: 5432
  clusterIP: None
  selector:
    app: postgres
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-schema
data:
  schema.sql: |
    -- Schema will be loaded from the database/schema.sql file
    -- This is a placeholder and should be replaced with the actual schema